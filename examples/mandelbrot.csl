
vec HUEtoRGB(float hue) = clamp(sin(hue+vec(0, 1/3, 2/3)*acos(-1)*2) + 0.5, 0, 1).xyz

void main()
{
    // Normalized pixel coordinates (from 0 to 1)
    vec uv = (gl_FragCoord.xy/iResolution.xy).xy;
    vec c = (uv * 4 - 2).xy;
    float zoomExp = (sin(iTime/5-acos(-1)/2)+1)/2*18;
    vec offset = vec(-0.10102, 0.95633);
    zoomExp = zoomExp < 0 ? 0 : zoomExp;
    if (iMouse.z > 0) {
    	zoomExp = 0;
        offset = vec(0);
    }
    //zoomExp = 5.0;
    float zoom = pow(2, zoomExp);
    //float zoom = pow(2.0, 10.0);
    c /= zoom;
    if (iMouse.x == 0 && iMouse.y == 0) {
    } else if (iMouse.z <= 0) {
    	offset = ((iMouse.xy/iResolution.xy)*4-2).xy;
    }
    //c += offset * clamp(zoomExp/4.0, 0.0, 1.0);
    c += offset;
    //c += vec(1.0, 0);
    
    vec x;
    
    float maxIter = 400;
    
    float i = 0;
    
    for (float _; i < maxIter; i+=1) {
    	float temp = x.x * x.x - x.y * x.y;
        x.y = 2 * x.x * x.y;
        x.x = temp;
        x += c;
        
        if (||x|| > 2) {
        	break;
        }
    }
    
	vec col = vec(0);
    
    if (i < maxIter)
        //col = vec3(float(i%10)/10.0);
    	col = HUEtoRGB(i/5);

    col.w = 1;
    // Output to screen
    gl_FragColor = col;
}